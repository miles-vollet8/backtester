#include "garch.hpp"
#include<vector>
#include<cstdio>
#include<iostream>


int main(void) {
    std::vector<double> returns = {0.03593200922606337, 0.0381759629276584, 0.03551175286350059, -0.020382871267200557, -0.007751976804317936, 0.03065374109100252, -0.0033599359622477044, -0.021259304057902204, 0.012809739633839511, 0.05970078809072537, 0.03147388037973146, -0.010120755909162438, -0.06966378731218502, 0.013333530869465168, 0.01642073021232749, -0.018907262782332297, 0.04542549004016403, 0.004352133476810338, 0.021481005619116054, -0.0019338625249506786, 0.0007739938466890813, 0.05200870573123013, 0.01711310650762455, -0.01125442991830596, 0.036915139393967907, -0.02782912376948548, 0.015437391474321898, 0.02114988952148747, 0.0, -0.01582033347061057, 0.014773395667776986, -0.002097169590723648, -0.004207579840014993, 0.012222956434730725, -0.07981133330878366, 0.0011271840381874916, 0.020443008897156823, -0.003685960678923502, -0.026568447678878813, 0.019527469915578025, -0.030585733222321162, -0.052747370094110346, -0.0266245503375618, 0.09873838862814849, -0.010206098797812016, 0.10657558263599434, 0.02462597035916503, -0.02121648870654454, 0.0337994361829705, 0.019873597556444533, 0.0070717106021397445, 0.027173867911027633, 0.013007306337378045, -0.005553855682797124, 0.006783868137997171, -0.019237329209283616, -0.004395611473038109, -0.029700410757173123, -0.0003242016562681503, -0.01568659616769962, 0.02086125195771702, 0.01536521906405614, -0.0312979248206242, 0.002618659434233678, -0.014156615023056703, 0.005620778560734365, 0.13171636036318898, 0.004613618333512715, 0.002585836809341756, 0.0017201839104115414, 0.019291378405156885, 0.02002848590414314, 0.003848273028422758, -0.0019222853646909215, 0.012293557366997549, 0.009996030822127036, 0.01996074256253815, -0.028057952795157493, 0.005944356871518377, -0.0005389383046102703, -0.007032758226283326, 0.00972454989199478, -0.020092992028583896, 0.02785846149730361, 0.04562240394934163, 0.019432788171981324, -0.028392274701487672, 0.0637507334136481, 0.03973092907844773, 0.009001791887935514, -0.00022980581509857124, -0.002531355626229576, -0.02260378189212563, -0.011854098031562177, 0.0016680571006970134, 0.022832579503535396, -0.006303277552324833, 0.005604872216056062, -0.008184308515512762, 0.02251981412963762, 0.02940723102730238, 0.002449071690553728, -0.0008898777005473941, -0.027986480118724066, -0.0499810767323178, 0.008624873781760158, -0.012240642455310972, 0.21084901153443217, 0.08255200616160785, 0.006283119135245286, 0.04393810790668523, 0.031191941196191873, -0.0064951514876559775, 0.014102266061470478, -0.025360051093389027, 0.10558016034119609, -0.0710367059086304, 0.027690114268249407, -0.013749217392392224, -0.012309841221485563, 0.0475787769831349, 0.0046511711757311015, 0.01671946301820671, 0.0047044627322610725, 0.015473905986673779, -0.010339494223940104, 0.06656989527025592, -0.01576625229835325, 0.0285088457773805, 0.06033811583673248, -0.05216236185015259, -0.02190530560000489, 0.022595103516575187, 0.009470937583764404, 0.03845854804194382, -0.004215524619731153, -0.01811692018622846, -0.03948422414294532, 0.03706161192173753, 0.08197919764094116, 0.0017365422374319194, 0.020728037147519477, -0.002917580479522094, -0.03796511022599639, -0.02431964219294336, -0.020287326241534707, -0.005834786478002561, 0.060632445104014984, -0.05097053419227817, -0.08132777960022428, -0.025468023874115897, -0.014318644515208727, -0.03448617607116932, 0.014210644823674262, 0.03327423716819196, 0.016014318075187838, 0.03588783113397211, 0.01795132436114579, 0.050697797557914405, 0.02707897249746283, 0.0, -0.04585701753330142, 0.0615598714403627, -0.005875384111981668, 0.018139396604568824, 0.015515551614488513, 0.015039686718356985, 0.21503818572436537, -0.024076410302478903, 0.09337101160230378, -0.003871611552867048, 0.051000062405118674, -0.035158678640966584, 0.04148240506395825, 0.004419896698151064, 0.010545506256499542, 0.04480197927099438, -0.10623466497893745, -0.053051416752534754, -0.04740315248659471, -0.11124304725868073, -0.03181984787810783, 0.016596485934574183, -0.05217175707548062, 0.0017679302147413185, -0.017821548066256142, 0.01167931283311229, 0.06568567096640693, -0.1134929060466763, 0.053831705489630045, -0.10587099021390192, 0.021628765164071, 0.0692917804713921, -0.04937610986066182, 0.07986878958851583, 0.012788929419378488, -0.040416619721862224, 0.02600299457548185, 0.014871448205767886, 0.040038989802827565, 0.061710482467610635, -0.0025873235649509123, -0.044715575039387265, -0.024018262642204274, -0.04820758331986422, -0.01703418574157292, 0.0033120446647529555, 0.03218775519794658, -0.045023681373955245, -0.12184330088128081, 0.050455218668374664, -0.0067027835376196245, 0.1739446124541399, -0.03787828237032885, -0.0004516201950985384, 0.044937736823763376, 0.060535703005601876, -0.05956446243931686, 0.011475272042549303, -0.0322923280541927, 0.03452910802496246, 0.07014835502227469, 0.06675536385086589, 0.045346905873685485, 0.01644499092487732, 0.012395599272018885, 0.02012689465745807, -0.019093658815579586, 0.06722424010703584, -0.004112079972915786, -0.128362351545877, 0.014771856094982657, 0.07554869444371437, -0.01564844788532143, 0.009840595189389383, 0.07823585805386941, 0.016106899241552758, -0.01595078340328389, 0.010867984628422268, -0.0249377785274337, -0.0058748978119107275, -0.040709199968775873, 0.014081840140019123, 0.008306236681160472, 0.0006485610280032055, 0.002994135354368387, -0.011703644644003891, 0.07449330386486694, 0.0019710414993184015, 0.008521600529061209, -0.02401513693997619, -0.08086990918273541, 0.06309890645523948, 0.03341599691984402, 0.005663170645733963, 0.02659889352662428, -0.008837232562469667
};
std:: cout << "Made it\n"<<std::endl;
    std::vector<double> x = {0.000001, 0.05, 0.9};

    optimize_params(returns, x);
    std:: cout<<"Optimized\n";
    std::vector<double> sigmas = calculated_sigma2(returns, x);
    double iv = forecast_iv(sigmas, x, 5);
    std::cout<<"Forecast";
    printf("Predicted IV = %f\n", iv);
    return 0;
}




// #include<iostream>

// int main(){
//     std::cout << "Testing this john"<< std::endl;
//     return 0;
// }

